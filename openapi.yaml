openapi: 3.0.3
info:
  title: Cards and Columns API
  version: 1.0.0
  description: API для управления колонками и карточками

servers:
  - url: http://localhost:8080
    description: Локальный сервер разработки

paths:
  /card:
    get:
      summary: Получить все карточки
      responses:
        '200':
          description: Успешный ответ со списком карточек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCardAll'
    post:
      summary: Создать новую карточку
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCardRequest'
      responses:
        '201':
          description: Карточка успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCardAdd'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /card/{id}:
    delete:
      summary: Удалить карточку по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Карточка успешно удалена
        '404':
          description: Карточка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    patch:
      summary: Обновить карточку по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
      responses:
        '200':
          description: Карточка успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Карточка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /column:
    get:
      summary: Получить все колонки
      responses:
        '200':
          description: Успешный ответ со списком колонок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseColumnAll'

components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: string
          enum: [Ok, Error]
        error:
          type: string
          nullable: true

    Card:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        content:
          type: string
        sort:
          type: integer
          format: int64
        columnId:
          type: integer
          format: int64

    Column:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        sort:
          type: integer
          format: int64

    ResponseCardAll:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/Card'
              example:
                - id: 1
                  name: "Test add card"
                  content: "Run postman and send add card request"
                  sort: 100
                  columnId: 2
                - id: 2
                  name: "Test get card"
                  content: "Run postman and send get card request"
                  sort: 100
                  columnId: 3

    ResponseCardAdd:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    ResponseColumnAll:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            columns:
              type: array
              items:
                $ref: '#/components/schemas/Column'
              example:
                - id: 1
                  name: "Todo"
                  sort: 10
                - id: 2
                  name: "Block"
                  sort: 20
                - id: 3
                  name: "Development"
                  sort: 30
                - id: 4
                  name: "Review"
                  sort: 40
                - id: 5
                  name: "In test"
                  sort: 50
                - id: 6
                  name: "Done"
                  sort: 60

    AddCardRequest:
      type: object
      required:
        - name
        - sort
        - columnId
      properties:
        name:
          type: string
        content:
          type: string
          nullable: true
        sort:
          type: integer
          format: int64
        columnId:
          type: integer
          format: int64

    UpdateCardRequest:
      type: object
      required:
        - name
        - sort
        - column_id
      properties:
        name:
          type: string
        content:
          type: string
          nullable: true
        sort:
          type: integer
          format: int64
        column_id:
          type: integer
          format: int64

    UpdateCardResponse:
      $ref: '#/components/schemas/Response'